plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.freefair.lombok' version "6.0.0-m2"
    id 'com.github.johnrengelman.shadow' version "7.0.0"
}
def major = 0, minor = 1, micro = 5

version "$major.$minor.$micro"
group "com.github.worldOneo"

repositories {
    mavenCentral()
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.spigotmc'
        }
    }
    maven {
        url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    //Particle legacy sup
    compileOnly "org.spigotmc:spigot-api:1.8.8-R0.1-SNAPSHOT"

    compileOnly "org.spigotmc:spigot-api:${MCVERSION}"
    compileOnly "net.md-5:bungeecord-api:${BUNGEEVERSION}"
    implementation group: 'org.jetbrains', name: 'annotations', version: JETBRAINSANNOTATIONSVERSION

    shadow "com.zaxxer:HikariCP:${HIKARICPVERSION}"
    shadow "org.slf4j:slf4j-nop:1.7.30"
}

processResources {
    setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
    from(sourceSets.main.resources.srcDirs) {
        expand(["VERSION": version, "NAME": rootProject.name])
        include '*.yml'
    }
}

shadowJar {
    from('licenses') {
        include '*'
    }

    archiveFileName = "$rootProject.name-$rootProject.version.${archiveExtension.get()}"
    configurations = [project.configurations.shadow]
    relocate 'com.zaxxer.hikari', 'de.worldoneo.spijetapi.hikari'
}

task githubJar(type: Copy, dependsOn: shadowJar) {
    def libsDir = file(getLibsDirectory().get())
    def shadowArchive = shadowJar.archiveFileName.get()
    from(libsDir)
    include shadowArchive
    destinationDir libsDir
    rename shadowArchive, 'SpiJetAPI-GitHub.jar'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier('javadoc')
    from javadoc.destinationDir
}


publishing {
    publications {
        maven(MavenPublication) {
            artifact javadocJar
            artifact sourcesJar
            artifact shadowJar
            artifact jar
        }
    }
}
